---
import { Icon } from 'astro-icon/components';

export interface Props {
  date: string;
  lastEntry?: boolean;
  subtitle?: string;
  status?: 'complete' | 'in-progress' | 'planned';
  icon?: string;
  iconColor?: string;
  dotColor?: string;
  textColor?: string;
}
  
const { date, lastEntry = false, subtitle, status = 'complete', icon, iconColor, dotColor, textColor } = Astro.props;

// Default colors based on status
let defaultDotColor;
let defaultTextColor;

if (status === 'complete') {
  // defaultDotColor = 'bg-green-500 dark:bg-green-400';
  // defaultTextColor = 'text-green-600 dark:text-green-500';
  defaultDotColor = 'bg-primary';
  defaultTextColor = 'text-primary';
} else if (status === 'in-progress') {
  defaultDotColor = 'bg-yellow-500 dark:bg-yellow-400';
  defaultTextColor = 'text-yellow-600 dark:text-yellow-500';
} else if (status === 'planned') {
  defaultDotColor = 'bg-gray-300 dark:bg-gray-500';
  defaultTextColor = 'text-gray-400 dark:text-gray-500';
}

const finalDotColor = dotColor || defaultDotColor;
const finalTextColor = textColor || defaultTextColor;

// Size classes for the dot based on whether an icon is present
const dotSizeClasses = icon ? 'w-8 h-8 -left-2 -top-1' : 'w-4 h-4 left-0 top-1';
---

<div class="timeline-entry relative pl-8 pb-8 group">
  <!-- Timeline dot and line -->
  {status === 'in-progress' && (
  <div class={`absolute ${dotSizeClasses} rounded-full ${finalDotColor} z-10 flex items-center justify-center animate-ping opacity-75`}>
    {icon && <Icon name={icon} class={`w-5 h-5 ${iconColor}`} />}
  </div>
  )}
  <div class={`absolute ${dotSizeClasses} rounded-full ${finalDotColor} z-10 flex items-center justify-center`}>
    {icon && <Icon name={icon} class={`w-5 h-5 ${iconColor}`} />}
  </div>
  {lastEntry === false && (
    status === 'complete' ? (
      <div class="absolute left-2 top-5 h-full w-0.75 bg-gray-500 dark:bg-gray-200 -translate-x-1/2"></div>
    ) : (
      status === 'in-progress' || status === 'planned' ? (
        <div class="absolute left-2 top-5 h-full w-0.75 bg-gray-200 dark:bg-gray-700 -translate-x-1/2"></div>
      ) : null
    )
  )}

  <!-- Content -->
  <div class="timeline-content">
    <div class={`text-lg font-medium -translate-y-[2px] ${finalTextColor}`}>{date}</div>
    {subtitle && <div class="text-sm text-gray-400 dark:text-gray-500 mb-1">{subtitle}</div>}
    <div class="prose dark:prose-invert max-w-none">
      <slot />
    </div>
  </div>
</div>